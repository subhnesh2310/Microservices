"""Created API for Test Execution

Revision ID: d768ff996d7d
Revises: 
Create Date: 2024-07-06 23:12:10.694472

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd768ff996d7d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('connectne',
    sa.Column('connect_ne_uuid', sa.String(length=150), nullable=False),
    sa.Column('handle', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=64), nullable=True),
    sa.Column('hostname', sa.String(length=100), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('interface', sa.String(length=50), nullable=True),
    sa.Column('created_time', sa.DateTime(), nullable=True),
    sa.Column('connection_status', sa.String(length=1), nullable=True),
    sa.PrimaryKeyConstraint('connect_ne_uuid')
    )
    op.create_table('disconnectne',
    sa.Column('disconnect_ne_uuid', sa.String(length=150), nullable=False),
    sa.Column('handle', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=64), nullable=True),
    sa.Column('hostname', sa.String(length=100), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('interface', sa.String(length=50), nullable=True),
    sa.Column('created_time', sa.DateTime(), nullable=True),
    sa.Column('disconnect_status', sa.String(length=1), nullable=True),
    sa.PrimaryKeyConstraint('disconnect_ne_uuid')
    )
    op.create_table('metadata',
    sa.Column('metadata_uuid', sa.String(length=50), nullable=False),
    sa.Column('owner', sa.String(length=255), nullable=True),
    sa.Column('doa', sa.String(length=20), nullable=True),
    sa.Column('with_tgen', sa.String(length=3), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('product', sa.String(length=50), nullable=True),
    sa.Column('interface', sa.String(length=50), nullable=True),
    sa.Column('script_id', sa.String(length=10), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('software_version', sa.String(length=20), nullable=True),
    sa.Column('simulator_compatible', sa.String(length=3), nullable=True),
    sa.PrimaryKeyConstraint('metadata_uuid')
    )
    op.create_table('permissions',
    sa.Column('permission_uuid', sa.String(length=150), nullable=False),
    sa.Column('permission_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('permission_uuid'),
    sa.UniqueConstraint('permission_name')
    )
    op.create_table('roles',
    sa.Column('role_uuid', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('role_uuid'),
    sa.UniqueConstraint('role_name')
    )
    op.create_table('users',
    sa.Column('userid_uuid', sa.String(length=50), nullable=False),
    sa.Column('email_id', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('role_uuid', sa.Integer(), nullable=True),
    sa.Column('permission_uuid', sa.String(length=150), nullable=True),
    sa.Column('csim_status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['permission_uuid'], ['permissions.permission_uuid'], ),
    sa.ForeignKeyConstraint(['role_uuid'], ['roles.role_uuid'], ),
    sa.PrimaryKeyConstraint('userid_uuid'),
    sa.UniqueConstraint('email_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('test_execution',
    sa.Column('execution_uuid', sa.String(length=50), nullable=False),
    sa.Column('environment_details', sa.String(length=255), nullable=True),
    sa.Column('userid_uuid', sa.String(length=150), nullable=True),
    sa.Column('test_suite_uuid', sa.Integer(), nullable=True),
    sa.Column('test_suite_name', sa.String(length=100), nullable=True),
    sa.Column('test_case_uuid', sa.Integer(), nullable=True),
    sa.Column('test_case_name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('executed_at', sa.DateTime(), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=True),
    sa.Column('end_at', sa.DateTime(), nullable=True),
    sa.Column('time_taken', sa.String(length=20), nullable=True),
    sa.Column('result', sa.String(length=20), nullable=True),
    sa.Column('sw_package', sa.String(length=100), nullable=True),
    sa.Column('logs_path', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['userid_uuid'], ['users.userid_uuid'], ),
    sa.PrimaryKeyConstraint('execution_uuid')
    )
    op.create_table('test_execution_metrics',
    sa.Column('matric_uuid', sa.String(length=50), nullable=False),
    sa.Column('execution_uuid', sa.String(length=50), nullable=True),
    sa.Column('execution_table', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('execution_count', sa.Integer(), nullable=True),
    sa.Column('each_execution_status', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['execution_uuid'], ['test_execution.execution_uuid'], ),
    sa.PrimaryKeyConstraint('matric_uuid')
    )
    op.create_table('teststeps_results',
    sa.Column('log_id_uuid', sa.String(length=50), nullable=False),
    sa.Column('log_path', sa.String(length=255), nullable=True),
    sa.Column('execution_uuid', sa.String(length=50), nullable=True),
    sa.Column('test_result_status', sa.String(length=1), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('test_suite_uuid', sa.String(length=250), nullable=True),
    sa.Column('userid_uuid', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['execution_uuid'], ['test_execution.execution_uuid'], ),
    sa.ForeignKeyConstraint(['userid_uuid'], ['users.userid_uuid'], ),
    sa.PrimaryKeyConstraint('log_id_uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teststeps_results')
    op.drop_table('test_execution_metrics')
    op.drop_table('test_execution')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('permissions')
    op.drop_table('metadata')
    op.drop_table('disconnectne')
    op.drop_table('connectne')
    # ### end Alembic commands ###
